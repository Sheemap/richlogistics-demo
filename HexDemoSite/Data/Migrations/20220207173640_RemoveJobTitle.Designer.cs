// <auto-generated />
using System;
using HexDemoSite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HexDemoSite.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220207173640_RemoveJobTitle")]
    partial class RemoveJobTitle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("HexDemoSite.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OpenPositionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OpenPositionId");

                    b.ToTable("CandidateForms");
                });

            modelBuilder.Entity("HexDemoSite.Models.DepartmentPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OpenPositionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OpenPositionId")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("DepartmentPositions");
                });

            modelBuilder.Entity("HexDemoSite.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HexDemoSite.Models.OpenPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("DateFilled")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("HRDateApproved")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LeadershipDateApproved")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OpenPositions");
                });

            modelBuilder.Entity("HexDemoSite.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HexDemoSite.Models.Candidate", b =>
                {
                    b.HasOne("HexDemoSite.Models.OpenPosition", "OpenPosition")
                        .WithMany()
                        .HasForeignKey("OpenPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpenPosition");
                });

            modelBuilder.Entity("HexDemoSite.Models.DepartmentPosition", b =>
                {
                    b.HasOne("HexDemoSite.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("HexDemoSite.Models.OpenPosition", "OpenPosition")
                        .WithOne("DepartmentPosition")
                        .HasForeignKey("HexDemoSite.Models.DepartmentPosition", "OpenPositionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HexDemoSite.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("OpenPosition");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HexDemoSite.Models.OpenPosition", b =>
                {
                    b.Navigation("DepartmentPosition")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
